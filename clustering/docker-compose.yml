
x-common-activemq:
  &default-common-activemq
  image: kartoza/activemq-docker:manual-build
  build: activemq-docker
  restart: on-failure

volumes:
   geoserver-cluster-data:
   geoserver-cluster-gwc-data:
   geo-db-data:

networks:
  gscluster:


services:
    db:
      image: kartoza/postgis:16-3.4
      volumes:
        - geo-db-data:/var/lib/postgresql
      environment:
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - ALLOW_IP_RANGE=0.0.0.0/0
        - FORCE_SSL=TRUE
      restart: on-failure
      healthcheck:
        test: "PGPASSWORD=docker pg_isready -h 127.0.0.1 -U docker -d gis"
      networks:
          - gscluster
    broker1:
      << : *default-common-activemq
      environment:
        - JAVA_HOME=/opt/java/openjdk
        - HOST=db
        - POSTGRES_PORT=5432
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - ACTIVEMQ_SERVER_URI=tcp://broker1:61616?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=false&transport.daemon=true
        - ACTIVEMQ_SERVER_DISCOVERYURI=multicast://default
        - SSL_MODE=ALLOW
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: netstat -ltn | grep -c ":61616"
        interval: 30s
        timeout: 10s
        retries: 10
      networks:
          - gscluster
    master:
      image: kartoza/geoserver:2.25.2
      volumes:
         - ./geo_data_dir:/opt/geoserver/data_dir
         - ./geo_data_dir_gwc:/opt/geoserver/gwc
      ports:
        - "8081:8080"
      environment:
        - CLUSTERING=true
        - CLUSTER_DURABILITY=false
        - SSL_MODE=ALLOW
        - BROKER_URL=tcp://broker1:61616
        - READONLY=enabled
        - TOGGLE_MASTER=true
        - TOGGLE_SLAVE=true
        - EMBEDDED_BROKER=disabled
        - RUN_AS_ROOT=TRUE
        - GEOSERVER_ADMIN_USER=admin
        - GEOSERVER_ADMIN_PASSWORD=myawesomegeoserver
        - STABLE_EXTENSIONS=
        - COMMUNITY_EXTENSIONS=jms-cluster-plugin,mbtiles
        - SAMPLE_DATA=true
        - RANDOMSTRING=23bd87cfa327d47e-master
        - INSTANCE_STRING=ac3bcba2fa7d989678a01ef4facc4173010cd8b40d2e5f5a8d18d5f863ca976f-master
        # prevent some errors the option below
        #- ADDITIONAL_JAVA_STARTUP_OPTIONS="--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED"
      restart: on-failure
      depends_on:
        db:
          condition: service_healthy
        broker1:
          condition: service_healthy
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3
      networks:
          - gscluster
    node:
      image: kartoza/geoserver:2.25.2
      volumes:
         - ./geo_data_dir:/opt/geoserver/data_dir
         - ./geo_data_dir_gwc:/opt/geoserver/gwc
      ports:
        - "8082:8080"
      environment:
        - CLUSTERING=true
        - CLUSTER_DURABILITY=false
        - SSL_MODE=ALLOW
        - BROKER_URL=tcp://broker1:61616
        - READONLY=enabled
        - TOGGLE_MASTER=true
        - TOGGLE_SLAVE=true
        - EMBEDDED_BROKER=disabled
        - RUN_AS_ROOT=TRUE
        - GEOSERVER_ADMIN_USER=admin
        - GEOSERVER_ADMIN_PASSWORD=myawesomegeoserver
        - STABLE_EXTENSIONS=
        - COMMUNITY_EXTENSIONS=jms-cluster-plugin,mbtiles
        - SAMPLE_DATA=true
        - RANDOMSTRING=23bd87cfa327d47e-node
        - INSTANCE_STRING=ac3bcba2fa7d989678a01ef4facc4173010cd8b40d2e5f5a8d18d5f863ca976f-node
        # prevent some errors the option below
        #- ADDITIONAL_JAVA_STARTUP_OPTIONS="--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED"
      restart: on-failure
      depends_on:
        master:
          condition: service_started
        db:
          condition: service_healthy
        broker1:
          condition: service_healthy
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3
      networks:
          - gscluster
    node2:
      image: kartoza/geoserver:2.25.2
      volumes:
         - ./geo_data_dir:/opt/geoserver/data_dir
         - ./geo_data_dir_gwc:/opt/geoserver/gwc
      ports:
        - "8083:8080"
      environment:
        - CLUSTERING=true
        - CLUSTER_DURABILITY=false
        - SSL_MODE=ALLOW
        - BROKER_URL=tcp://broker1:61616
        - READONLY=enabled
        - TOGGLE_MASTER=false
        - TOGGLE_SLAVE=true
        - EMBEDDED_BROKER=disabled
        - RUN_AS_ROOT=TRUE
        - GEOSERVER_ADMIN_USER=admin
        - GEOSERVER_ADMIN_PASSWORD=myawesomegeoserver
        - STABLE_EXTENSIONS=
        - COMMUNITY_EXTENSIONS=jms-cluster-plugin,mbtiles
        - SAMPLE_DATA=true
        - RANDOMSTRING=23bd87cfa327d47e-node2
        - INSTANCE_STRING=ac3bcba2fa7d989678a01ef4facc4173010cd8b40d2e5f5a8d18d5f863ca976f-node2
        
        # prevent some errors the option below
        #- ADDITIONAL_JAVA_STARTUP_OPTIONS="--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED"
      restart: on-failure
      depends_on:
        master:
          condition: service_started
        node:
          condition: service_started
        db:
          condition: service_healthy
        broker1:
          condition: service_healthy
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3
      networks:
          - gscluster
    caddy:
      image: caddy:latest
      build:
        context: caddy
        dockerfile: Dockerfile
      ports:
        - 80:80
        - 443:443
      healthcheck:
        test: curl --fail -s http://localhost || exit 1
        interval: 1m
        retries: 5
        start_period: 20s
        timeout: 10s
      depends_on:
          master:
            condition: service_healthy
          node:
            condition: service_healthy
          node2:
            condition: service_healthy
          broker1:
            condition: service_healthy
      networks:
        - gscluster
   
   

