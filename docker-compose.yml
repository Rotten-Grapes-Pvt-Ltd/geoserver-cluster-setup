version: '3.9'

volumes:
  geoserver-cluster-data:
  geoserver-cluster-gwc-data:
  geo-db-data:

networks:
  gscluster:

services:
  db:
    image: kartoza/postgis:14-3.1
    volumes:
      - geo-db-data:/var/lib/postgresql
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      - FORCE_SSL=FALSE
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=docker pg_isready -h 127.0.0.1 -U docker -d gis"
    networks:
      - gscluster
  geobroker:
    image: kartoza/activemq-docker:2.20.6
    build:
      context: ./scripts/docker/build/activemq
      dockerfile: Dockerfile
    environment:
      - JAVA_HOME=/opt/java/openjdk
      - HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - SSL_MODE=false
      - ACTIVEMQ_SERVER_URI=tcp://0.0.0.0:61616?maximumConnections=1000&wireFormat.maxFrameSize=104857600&jms.useAsyncSend=false&transport.daemon=true
      - ACTIVEMQ_SERVER_DISCOVERYURI=multicast://default
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8161:8161
      - 61616:61616
    healthcheck:
      # test: curl --fail -s http://localhost:8161 || exit 1
      test: netstat -ltn | grep -c ":61616"
      interval: 60s
      timeout: 15s
      retries: 10
    networks:
      - gscluster
  master:
      image: kartoza/geoserver:2.25.2
      volumes:
         - geoserver-cluster-data:/opt/geoserver/data_dir
         - geoserver-cluster-gwc-data:/opt/geoserver/gwc
      ports:
        - "8081:8080"
      environment:
        - GEOWEBCACHE_CACHE_DIR=/opt/geoserver/gwc
        - BROKER_URL=tcp://geobroker:61616
        - READONLY=disabled
        - CLUSTER_DURABILITY=false
        - CLUSTERING=True
        - TOGGLE_MASTER=true
        - TOGGLE_SLAVE=true
        - DB_BACKEND=POSTGRES
        - HOST=db
        - POSTGRES_PORT=5432
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - SSL_MODE=allow
        - GEOSERVER_ADMIN_PASSWORD=myawesomegeoserver
        - GEOSERVER_ADMIN_USER=admin
        # prevent some errors the option below
        #- ADDITIONAL_JAVA_STARTUP_OPTIONS="--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED"
      restart: on-failure
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u admin:'myawesomegeoserver' http://localhost:8080/geoserver/rest/about/version.xml"
        interval: 1m30s
        timeout: 10s
        retries: 3
      networks:
        - gscluste
  node:
      image: kartoza/geoserver:2.25.2
      volumes:
         - geoserver-cluster-data:/opt/geoserver/data_dir
         - geoserver-cluster-gwc-data:/opt/geoserver/gwc
      ports:
        - "8082:8080"
      environment:
        - GEOWEBCACHE_CACHE_DIR=/opt/geoserver/gwc
        - BROKER_URL=tcp://geobroker:61616
        - READONLY=disabled
        - CLUSTER_DURABILITY=false
        - CLUSTERING=True
        - TOGGLE_MASTER=true
        - TOGGLE_SLAVE=true
        - EMBEDDED_BROKER=disabled
        - HOST=db
        - POSTGRES_PORT=5432
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - SSL_MODE=allow
        - GEOSERVER_ADMIN_PASSWORD=myawesomegeoserver
        - GEOSERVER_ADMIN_USER=admin
        # prevent some errors the option below
        #- ADDITIONAL_JAVA_STARTUP_OPTIONS="--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED"
      restart: on-failure
      depends_on:
        master:
          condition: service_started
        db:
          condition: service_healthy
      healthcheck:
        test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u admin:'myawesomegeoserver' http://localhost:8080/geoserver/rest/about/version.xml"
        interval: 1m30s
        timeout: 10s
        retries: 3
      networks:
        - gscluste
  node2:
      image: kartoza/geoserver:2.25.2
      volumes:
         - geoserver-cluster-data:/opt/geoserver/data_dir
         - geoserver-cluster-gwc-data:/opt/geoserver/gwc
      ports:
        - "8083:8080"
      environment:
        - GEOWEBCACHE_CACHE_DIR=/opt/geoserver/gwc
        - BROKER_URL=tcp://geobroker:61616
        - READONLY=disabled
        - CLUSTER_DURABILITY=false
        - CLUSTERING=True
        - TOGGLE_MASTER=true
        - TOGGLE_SLAVE=true
        - EMBEDDED_BROKER=disabled
        - HOST=db
        - POSTGRES_PORT=5432
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - SSL_MODE=allow
        - GEOSERVER_ADMIN_PASSWORD=myawesomegeoserver
        - GEOSERVER_ADMIN_USER=admin
        # prevent some errors the option below
        #- ADDITIONAL_JAVA_STARTUP_OPTIONS="--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED"
      restart: on-failure
      depends_on:
        master:
          condition: service_started
        db:
          condition: service_healthy
      healthcheck:
        test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u admin:'myawesomegeoserver' http://localhost:8080/geoserver/rest/about/version.xml"
        interval: 1m30s
        timeout: 10s
        retries: 3
      networks:
        - gscluste
  nginx:
    image: nginx:latest
    build:
      context: ./scripts/docker/build/nginx
      dockerfile: Dockerfile
    ports:
      - "8001:80"
    healthcheck:
      test: curl --fail -s http://localhost || exit 1
      interval: 1m
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      gs-node1:
        condition: service_healthy
      gs-node2:
        condition: service_healthy
      gs-node3:
        condition: service_healthy
      geobroker:
        condition: service_healthy
  # caddy:
  #   image: caddy:latest
  #   platform: 'linux/amd64'
  #   build:
  #     context: ./scripts/docker/build/caddy
  #     dockerfile: Dockerfile
  #   ports:
  #     - 9001:9001
  #     - 80:80
  #     - 443:443
  #   healthcheck:
  #     test: curl --fail -s http://localhost || exit 1
  #     interval: 1m
  #     retries: 5
  #     start_period: 20s
  #     timeout: 10s
  #   depends_on:
  #       gs-node1:
  #         condition: service_healthy
  #       gs-node2:
  #         condition: service_healthy
  #       gs-node3:
  #         condition: service_healthy
  #       geobroker:
  #         condition: service_healthy
  #   networks:
  #     - gscluster
